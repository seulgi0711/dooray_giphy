{"version":3,"sources":["../src/commandhandler.js"],"names":["searchGiphy","keyword","rej","res","requester","Giphy","search","then","catch","appendAddButton","getOriginalUrl","head","makeResponseMessageForDooray","wrapWithArray","makeKeywordText","concat","dooray","body"],"mappings":";;;;;;AAAA;;;;AACA;;AAYA;;;;AACA;;;;AAKA,IAAMA,cAAc,SAAdA,WAAc,CAACC,OAAD,EAAa;AAC7B,WAAO,uBAAO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACxBC,4BAAUC,KAAV,CAAgBC,MAAhB,CAAuBL,OAAvB,EAAgCM,IAAhC,CAAqC,iBAAK,iBAAK,MAAL,CAAL,EAAmBJ,GAAnB,CAArC,EAA8DK,KAA9D,CAAoEN,GAApE;AACH,KAFM,CAAP;AAGH,CAJD;;AAMA,IAAMO,kBAAkB,mBAAO;AAC3B,eAAW,CAAC;AACR,gBAAQ,MADA;AAER,gBAAQ,UAFA;AAGR,gBAAQ,QAHA;AAIR,iBAAS;AAJD,KAAD;AADgB,CAAP,CAAxB;;AASA,IAAMC,iBAAiB,iBACnB,iBAAK,MAAL,CADmB,EAEnBC,WAFmB,EAGnB,iBAAK,CAAC,QAAD,EAAW,UAAX,EAAuB,KAAvB,CAAL,CAHmB,CAAvB;;AAMA,IAAMC,+BAA+B,iBACjCF,cADiC,EAEjC,4BAAe,UAAf,CAFiC,EAGjCG,qBAHiC,EAIjCJ,eAJiC,EAKjC,4BAAe,aAAf,CALiC,CAArC;;AAQA,IAAMK,kBAAkB,iBACpB,iBAAK,MAAL,CADoB,EAEpB,mBAAO,IAAP,CAFoB,EAGpB,iBAAKC,aAAL,EAAa,cAAb,CAHoB,EAIpB,4BAAe,MAAf,CAJoB,CAAxB;;AAOA;AACA,IAAMT,SAAS,iBACX,iBAAK,MAAL,CADW,EAEXN,WAFW,CAAf;;AAKA,IAAMgB,SAAS,SAATA,MAAS,CAACC,IAAD,EAAU;AACrB,WAAO,iBACHX,MADG,EAEH,gBAAIM,4BAAJ,CAFG,EAGH,gBAAI,kBAAME,gBAAgBG,IAAhB,CAAN,CAAJ,CAHG,EAILA,IAJK,CAAP;AAKH,CAND;;kBAQe;AACXD;AADW,C","file":"commandhandler.js","sourcesContent":["import Future from 'fluture';\nimport {\n    concat,\n    flip,\n    append,\n    head,\n    map,\n    merge,\n    path,\n    pipe,\n    prop,\n    tap\n} from 'ramda';\nimport requester from './requester';\nimport {\n    wrapWithArray,\n    wrapWithObject\n} from './fnUtil';\n\nconst searchGiphy = (keyword) => {\n    return Future((rej, res) => {\n        requester.Giphy.search(keyword).then(pipe(prop('data'), res)).catch(rej);\n    })\n}\n\nconst appendAddButton = append({\n    \"actions\": [{\n        \"name\": \"send\",\n        \"text\": \"보내기(미구현)\",\n        \"type\": \"button\",\n        \"value\": \"send\"\n    }]\n})\n\nconst getOriginalUrl = pipe(\n    prop('data'),\n    head,\n    path(['images', 'original', 'url'])\n)\n\nconst makeResponseMessageForDooray = pipe(\n    getOriginalUrl,\n    wrapWithObject('imageUrl'),\n    wrapWithArray,\n    appendAddButton,\n    wrapWithObject('attachments')\n)\n\nconst makeKeywordText = pipe(\n    prop('text'),\n    concat('\\''),\n    flip(concat)('\\'에 대한 검색 결과'),\n    wrapWithObject('text')\n)\n\n// search :: Obj -> Future [Obj]\nconst search = pipe(\n    prop('text'),\n    searchGiphy\n);\n\nconst dooray = (body) => {\n    return pipe(\n        search,\n        map(makeResponseMessageForDooray),\n        map(merge(makeKeywordText(body)))\n    )(body);\n}\n\nexport default {\n    dooray\n};"]}