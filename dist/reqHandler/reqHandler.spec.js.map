{"version":3,"sources":["../../src/reqHandler/reqHandler.spec.js"],"names":["describe","test","body","actionValue","BUTTON_TYPE","SEND","expect","toEqual","originalMessage","text","value","objectContaining","responseType","deleteOriginal"],"mappings":";;AAAA;;AACA;;AAEAA,SAAS,cAAT,EAAyB,YAAM;AAC3BC,SAAK,sCAAL,EAA6C,YAAM;AAC/C,YAAMC,OAAO,EAAEC,aAAaC,sBAAYC,IAA3B,EAAb;AACAC,eAAO,8BAAaJ,IAAb,CAAP,EAA2BK,OAA3B,CAAmC,IAAnC;AACH,KAHD;;AAKAN,SAAK,2CAAL,EAAkD,YAAM;AACpD,YAAMC,OAAO,EAAEC,aAAa,QAAf,EAAb;AACAG,eAAO,8BAAaJ,IAAb,CAAP,EAA2BK,OAA3B,CAAmC,KAAnC;AACH,KAHD;AAIH,CAVD;;AAYAP,SAAS,kBAAT,EAA6B,YAAM;AAC/BC,SAAK,oBAAL,EAA2B,YAAM;AAC7B,YAAMC,OAAO;AACTM,6BAAiB;AACbC,sBAAM;AADO;AADR,SAAb;AAKAH,eAAO,kCAAiBJ,IAAjB,EAAuBQ,KAA9B,EAAqCH,OAArC,CAA6CD,OAAOK,gBAAP,CAAwB;AACjEC,0BAAc,WADmD;AAEjEC,4BAAgB,IAFiD;AAGjEJ,kBAAMP,KAAKM,eAAL,CAAqBC;AAHsC,SAAxB,CAA7C;AAKH,KAXD;AAYH,CAbD;;AAeAT,SAAS,gBAAT,EAA2B,YAAM;AAC7BC,SAAK,gBAAL,EAAuB,YAAM;AACzB,YAAMC,OAAO;AACTO,kBAAM;AADG,SAAb;AAGAH,eAAO,gCAAeJ,IAAf,CAAP,EAA6BK,OAA7B,CAAqC,MAArC;AACH,KALD;AAMH,CAPD","file":"reqHandler.spec.js","sourcesContent":["import { BUTTON_TYPE } from '../constant';\nimport { createSendResult, extractKeyword, isSendButton } from \"./reqHandler\";\n\ndescribe(\"isSendButton\", () => {\n    test(\"return true when actionValue is SEND\", () => {\n        const body = { actionValue: BUTTON_TYPE.SEND };\n        expect(isSendButton(body)).toEqual(true);\n    });\n\n    test('return false when actionValue is not SEND', () => {\n        const body = { actionValue: 'asdasd' };\n        expect(isSendButton(body)).toEqual(false);\n    });\n});\n\ndescribe('createSendResult', () => {\n    test('return send result', () => {\n        const body = {\n            originalMessage: {\n                text: 'text'\n            }\n        };\n        expect(createSendResult(body).value).toEqual(expect.objectContaining({\n            responseType: 'inChannel',\n            deleteOriginal: true,\n            text: body.originalMessage.text\n        }))\n    });\n});\n\ndescribe('extractKeyword', () => {\n    test('return keyword', () => {\n        const body = {\n            text: 'test'\n        };\n        expect(extractKeyword(body)).toEqual('test');\n    });\n});"]}