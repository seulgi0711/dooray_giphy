{"version":3,"sources":["../src/index.js"],"names":["app","use","bodyParser","urlencoded","extended","json","set","process","env","PORT","req","res","next","locals","showTests","get","query","test","type","send","post","commandHandler","dooray","value","result","getImgaeUrlFromAttachments","head","originalMessage","body","text","attachments","listen","console","log"],"mappings":";;AAAA;;;;AACA;;;;AACA;;AAMA;;;;AACA;;;;AAEA,IAAMA,MAAM,wBAAZ;;AAEAA,IAAIC,GAAJ,CAAQC,qBAAWC,UAAX,CAAsB;AAC1BC,cAAU;AADgB,CAAtB,CAAR;AAGAJ,IAAIC,GAAJ,CAAQC,qBAAWG,IAAX,EAAR;;AAEAL,IAAIM,GAAJ,CAAQ,MAAR,EAAgBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAApC;;AAEAT,IAAIC,GAAJ,CAAQ,UAACS,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxBD,QAAIE,MAAJ,CAAWC,SAAX,GAAuBd,IAAIe,GAAJ,CAAQ,KAAR,MAAmB,YAAnB,IAAmCL,IAAIM,KAAJ,CAAUC,IAAV,KAAmB,GAA7E;AACAL;AACH,CAHD;;AAKAZ,IAAIe,GAAJ,CAAQ,GAAR,EAAa,UAACL,GAAD,EAAMC,GAAN,EAAc;AACvBA,QAAIO,IAAJ,CAAS,YAAT;AACAP,QAAIQ,IAAJ,CAAS,MAAT;AACH,CAHD;;AAKAnB,IAAIoB,IAAJ,CAAS,QAAT,EAAmB,UAACV,GAAD,EAAMC,GAAN,EAAc;AAC7B,qBACI,iBAAK,MAAL,CADJ,EAEIU,yBAAeC,MAFnB,EAGEZ,GAHF,EAGOa,KAHP,CAGa,UAACC,MAAD;AAAA,eAAYb,IAAIQ,IAAJ,CAASK,MAAT,CAAZ;AAAA,KAHb;AAIH,CALD;;AAOA,IAAMC,6BAA6B,gBAC/B,+CAD+B,EAE/B,iBAAKC,WAAL,EAAW,iBAAK,UAAL,CAAX,CAF+B,CAAnC;;AAKA1B,IAAIoB,IAAJ,CAAS,MAAT,EAAiB,UAACV,GAAD,EAAMC,GAAN,EAAc;AAAA,QACpBgB,eADoB,GACDjB,IAAIkB,IADH,CACpBD,eADoB;;AAE3BhB,QAAIQ,IAAJ,CAAS;AACL,wBAAgB,WADX;AAEL,0BAAkB,IAFb;AAGLU,cAAMF,gBAAgBE,IAHjB;AAILC,qBAAa,iBAAK,CAAL,EAAQpB,IAAIkB,IAAJ,CAASD,eAAT,CAAyBG,WAAjC;AAJR,KAAT;AAMH,CARD;;AAUA9B,IAAI+B,MAAJ,CAAW/B,IAAIe,GAAJ,CAAQ,MAAR,CAAX,EAA4B,YAAM;AAC9BiB,YAAQC,GAAR,wBAAiCjC,IAAIe,GAAJ,CAAQ,MAAR,CAAjC;AACH,CAFD","file":"index.js","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport {\n    take,\n    head,\n    prop,\n    pipe\n} from 'ramda';\nimport commandHandler from './commandHandler/commandHandler';\nimport { def } from './types';\n\nconst app = express();\n\napp.use(bodyParser.urlencoded({\n    extended: false\n}));\napp.use(bodyParser.json());\n\napp.set('port', process.env.PORT || 3000);\n\napp.use((req, res, next) => {\n    res.locals.showTests = app.get('env') !== 'production' && req.query.test === '1';\n    next();\n});\n\napp.get('/', (req, res) => {\n    res.type('text/plain');\n    res.send('Test');\n});\n\napp.post('/giphy', (req, res) => {\n    pipe(\n        prop('body'),\n        commandHandler.dooray,\n    )(req).value((result) => res.send(result));\n});\n\nconst getImgaeUrlFromAttachments = def(\n    'getImgaeUrlFromAttachments :: Array -> String',\n    pipe(head, prop('imageUrl'))\n)\n\napp.post('/req', (req, res) => {\n    const {originalMessage} = req.body;\n    res.send({\n        \"responseType\": \"inChannel\",\n        \"deleteOriginal\": true,\n        text: originalMessage.text,\n        attachments: take(1, req.body.originalMessage.attachments)\n    })\n});\n\napp.listen(app.get('port'), () => {\n    console.log(`Server started on ${app.get('port')}`);\n});\n"]}