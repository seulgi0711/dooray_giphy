{"version":3,"sources":["../src/index.js"],"names":["app","use","bodyParser","urlencoded","extended","json","set","process","env","PORT","req","res","next","locals","showTests","get","query","test","type","send","post","value","result","fork","console","error","listen","log"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,MAAM,wBAAZ;;AAEAA,IAAIC,GAAJ,CACIC,qBAAWC,UAAX,CAAsB;AAClBC,cAAU;AADQ,CAAtB,CADJ;AAKAJ,IAAIC,GAAJ,CAAQC,qBAAWG,IAAX,EAAR;;AAEAL,IAAIM,GAAJ,CAAQ,MAAR,EAAgBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAApC;;AAEAT,IAAIC,GAAJ,CAAQ,UAACS,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxBD,QAAIE,MAAJ,CAAWC,SAAX,GACId,IAAIe,GAAJ,CAAQ,KAAR,MAAmB,YAAnB,IAAmCL,IAAIM,KAAJ,CAAUC,IAAV,KAAmB,GAD1D;AAEAL;AACH,CAJD;;AAMAZ,IAAIe,GAAJ,CAAQ,GAAR,EAAa,UAACL,GAAD,EAAMC,GAAN,EAAc;AACvBA,QAAIO,IAAJ,CAAS,YAAT;AACAP,QAAIQ,IAAJ,CAAS,MAAT;AACH,CAHD;;AAKAnB,IAAIoB,IAAJ,CAAS,QAAT,EAAmB,UAACV,GAAD,EAAMC,GAAN,EAAc;AAC7B,kCAAeD,GAAf,EAAoBW,KAApB,CAA0B,kBAAU;AAChC,eAAOV,IAAIQ,IAAJ,CAASG,MAAT,CAAP;AACH,KAFD;AAGH,CAJD;;AAMAtB,IAAIoB,IAAJ,CAAS,MAAT,EAAiB,UAACV,GAAD,EAAMC,GAAN,EAAc;AAC3B,8BAAWD,GAAX,EAAgBa,IAAhB,CACIC,QAAQC,KADZ,EAEI;AAAA,eAAUd,IAAIQ,IAAJ,CAASG,MAAT,CAAV;AAAA,KAFJ;AAIH,CALD;;AAOAtB,IAAI0B,MAAJ,CAAW1B,IAAIe,GAAJ,CAAQ,MAAR,CAAX,EAA4B,YAAM;AAC9BS,YAAQG,GAAR,wBAAiC3B,IAAIe,GAAJ,CAAQ,MAAR,CAAjC;AACH,CAFD","file":"index.js","sourcesContent":["import bodyParser from \"body-parser\";\nimport express from \"express\";\nimport commandHandler from \"./commandHandler/commandHandler\";\nimport reqHandler from \"./reqHandler/reqHandler\";\n\nconst app = express();\n\napp.use(\n    bodyParser.urlencoded({\n        extended: false\n    })\n);\napp.use(bodyParser.json());\n\napp.set(\"port\", process.env.PORT || 3000);\n\napp.use((req, res, next) => {\n    res.locals.showTests =\n        app.get(\"env\") !== \"production\" && req.query.test === \"1\";\n    next();\n});\n\napp.get(\"/\", (req, res) => {\n    res.type(\"text/plain\");\n    res.send(\"Test\");\n});\n\napp.post(\"/giphy\", (req, res) => {\n    commandHandler(req).value(result => {\n        return res.send(result);\n    });\n});\n\napp.post(\"/req\", (req, res) => {\n    reqHandler(req).fork(\n        console.error,\n        result => res.send(result)\n    );\n});\n\napp.listen(app.get(\"port\"), () => {\n    console.log(`Server started on ${app.get(\"port\")}`);\n});\n"]}