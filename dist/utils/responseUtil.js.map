{"version":3,"sources":["../../src/utils/responseUtil.js"],"names":["createPrevAction","__","name","BUTTON_TYPE","PREV","text","type","ACTION_TYPE","BUTTON","createNextAction","NEXT","createNextActions","dec","inc","isEmpty","createPrevActions","createActions","isNextButton","createInChannelResponse","responseType","createReplaceResponse","deleteOriginal","mergeActionAndImageAttachment","actionsAttachment","imageAttachment","attachments","createOriginImageAttachment","getOriginalUrl","createThumbImageAttachment","createKeywordText","getSearchKeyword","concat","createSendAction","SEND"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEO,IAAMA,8CAAmB,gBAC5B,sCAD4B,EAE5B,kBAAM,OAAN,EAAeC,SAAf,EAAmB;AACfC,UAAMC,sBAAYC,IADH;AAEfC,UAAM,QAFS;AAGfC,UAAMC,sBAAYC;AAHH,CAAnB,CAF4B,CAAzB;;AASA,IAAMC,8CAAmB,gBAC5B,sCAD4B,EAE5B,kBAAM,OAAN,EAAeR,SAAf,EAAmB;AACfC,UAAMC,sBAAYO,IADH;AAEfL,UAAM,QAFS;AAGfC,UAAMC,sBAAYC;AAHH,CAAnB,CAF4B,CAAzB;;AASP;AACO,IAAMG,gDAAoB,gBAC7B,uCAD6B,EAE7B,iBACI,oBAAO,QAAP,CADJ,EAEI,iBAAK,CAAC,iBAAK,eAAGV,SAAH,EAAO,CAAP,CAAL,EAAgB,iBAAKW,UAAL,EAAUZ,gBAAV,CAAhB,CAAD,EAA+C,iBAAKa,UAAL,EAAUJ,gBAAV,CAA/C,CAAL,CAFJ,EAGI,mBAAOK,eAAP,CAHJ,EAII,kBAAM,SAAN,CAJJ,CAF6B,CAA1B;;AAUP;AACO,IAAMC,gDAAoB,gBAC7B,uCAD6B,EAE7B,iBACI,iBAAK,CAAC,iBAAK,eAAGd,SAAH,EAAO,CAAP,CAAL,EAAgB,iBAAKW,UAAL,EAAUZ,gBAAV,CAAhB,CAAD,EAA+C,iBAAKa,UAAL,EAAUJ,gBAAV,CAA/C,CAAL,CADJ,EAEI,mBAAOK,eAAP,CAFJ,EAGI,4BAAe,SAAf,CAHJ,CAF6B,CAA1B;;AASA,IAAME,wCAAgB,gBACzB,oCADyB,EAEzB,mBAAOC,wBAAP,EAAqBN,iBAArB,EAAwCI,iBAAxC,CAFyB,CAAtB;;AAKA,IAAMG,4DAA0B,gBACnC,wDADmC,EAEnC,kBAAMjB,SAAN,EAAU,EAAEkB,cAAc,WAAhB,EAAV,CAFmC,CAAhC;;AAKA,IAAMC,wDAAwB,gBACjC,oDADiC,EAEjC,kBAAMnB,SAAN,EAAU,EAAEoB,gBAAgB,IAAlB,EAAV,CAFiC,CAA9B;;AAKA,IAAMC,wEAAgC,gBACzC,6DADyC,EAEzC,UAACC,iBAAD,EAAoBC,eAApB,EAAwC;AACpC,WAAO;AACHC,qBAAa,CAACD,eAAD,EAAkBD,iBAAlB;AADV,KAAP;AAGH,CANwC,CAAtC;;AASP;AACO,IAAMG,oEAA8B,gBACvC,iDADuC,EAEvC,iBAAKC,2BAAL,EAAqB,kBAAM,UAAN,CAArB,CAFuC,CAApC;;AAKP;AACO,IAAMC,kEAA6B,gBACtC,iDADsC,EAEtC,iBAAKD,2BAAL,EAAqB,kBAAM,UAAN,CAArB,CAFsC,CAAnC;;AAKA,IAAME,gDAAoB,gBAC7B,uCAD6B,EAE7B,iBACIC,6BADJ,EAEI,mBAAO,GAAP,CAFJ,EAGI,iBAAKC,aAAL,EAAa,aAAb,CAHJ,EAII,kBAAM,MAAN,CAJJ,CAF6B,CAA1B;;AAUA,IAAMC,8CAAmB,gBAC5B,sCAD4B,EAE5B,kBAAM,OAAN,EAAe/B,SAAf,EAAmB;AACfC,UAAMC,sBAAY8B,IADH;AAEf5B,UAAM,WAFS;AAGfC,UAAMC,sBAAYC;AAHH,CAAnB,CAF4B,CAAzB","file":"responseUtil.js","sourcesContent":["import { isEmpty, parseInt } from \"lodash\";\nimport { __, assoc, concat, dec, flip, gt, ifElse, inc, juxt, merge, objOf, pipe, reject, when } from \"ramda\";\nimport { ACTION_TYPE, BUTTON_TYPE } from \"../constant\";\nimport { def } from \"../types/types\";\nimport { isNextButton } from \"./actionUtil\";\nimport { logTap, wrapWithObject } from \"./fnUtil\";\nimport { getFixedSmallUrl, getOriginalUrl, getSearchKeyword } from \"./requestUtil\";\n\nexport const createPrevAction = def(\n    \"createPrevAction :: Number -> Object\",\n    assoc(\"value\", __, {\n        name: BUTTON_TYPE.PREV,\n        text: \"이전 이미지\",\n        type: ACTION_TYPE.BUTTON\n    })\n);\n\nexport const createNextAction = def(\n    \"createNextAction :: Number -> Object\",\n    assoc(\"value\", __, {\n        name: BUTTON_TYPE.NEXT,\n        text: \"다음 이미지\",\n        type: ACTION_TYPE.BUTTON\n    })\n);\n\n// prettier-ignore\nexport const createNextActions = def(\n    \"createNextActions :: Number -> Object\",\n    pipe(\n        logTap('offset'),\n        juxt([when(gt(__, 0), pipe(dec, createPrevAction)), pipe(inc, createNextAction)]),\n        reject(isEmpty),\n        objOf(\"actions\")\n    )\n);\n\n// prettier-ignore\nexport const createPrevActions = def(\n    \"createPrevActions :: Number -> Object\",\n    pipe(\n        juxt([when(gt(__, 0), pipe(dec, createPrevAction)), pipe(inc, createNextAction)]),\n        reject(isEmpty),\n        wrapWithObject(\"actions\")\n    )\n);\n\nexport const createActions = def(\n    \"createActions :: ReqBody -> Object\",\n    ifElse(isNextButton, createNextActions, createPrevActions)\n);\n\nexport const createInChannelResponse = def(\n    \"createInChannelResponse :: Object -> InChannelResponse\",\n    merge(__, { responseType: \"inChannel\" })\n);\n\nexport const createReplaceResponse = def(\n    \"createReplaceResponse :: Object -> ReplaceResponse\",\n    merge(__, { deleteOriginal: true })\n);\n\nexport const mergeActionAndImageAttachment = def(\n    \"mergeActionAndImageAttachment :: Object -> Object -> Object\",\n    (actionsAttachment, imageAttachment) => {\n        return {\n            attachments: [imageAttachment, actionsAttachment]\n        };\n    }\n);\n\n// prettier-ignore\nexport const createOriginImageAttachment = def(\n    \"createOriginImageAttachment :: Object -> Object\",\n    pipe(getOriginalUrl, objOf(\"imageUrl\"))\n);\n\n// prettier-ignore\nexport const createThumbImageAttachment = def(\n    \"createOriginImageAttachment :: Object -> Object\",\n    pipe(getOriginalUrl, objOf(\"thumbUrl\"))\n);\n\nexport const createKeywordText = def(\n    \"createKeywordText :: Object -> Object\",\n    pipe(\n        getSearchKeyword,\n        concat(\"'\"),\n        flip(concat)(\"'에 대한 검색 결과\"),\n        objOf(\"text\")\n    )\n);\n\nexport const createSendAction = def(\n    'createSendAction :: Number -> Object',\n    assoc(\"value\", __, {\n        name: BUTTON_TYPE.SEND,\n        text: \"대화방으로 보내기\",\n        type: ACTION_TYPE.BUTTON\n    })\n);\n"]}