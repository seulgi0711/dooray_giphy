{"version":3,"sources":["../../src/utils/responseUtil.js"],"names":["createPrevAction","__","name","BUTTON_TYPE","PREV","text","type","ACTION_TYPE","BUTTON","createSendAction","SEND","value","createSendActionWithValue","createNextAction","NEXT","createNextActions","parseInt","dec","undefined","inc","createPrevActions","isEmpty","createActions","isNextButton","createInChannelResponse","responseType","createReplaceResponse","deleteOriginal","mergeActionAndImageAttachment","actionsAttachment","imageAttachment","attachments","mergeActionAndImagesAttachments","imagesAttachments","createOriginImageAttachment","getOriginalUrl","createMultiImageAttachments","getFixedHeightSmallUrl","merge","of","createOriginImagesAttachment","length","head","createKeywordText","getSearchKeyword","concat"],"mappings":"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","file":"responseUtil.js","sourcesContent":["import { isEmpty, parseInt } from \"lodash\";\nimport {\n    __,\n    always,\n    assoc,\n    concat,\n    converge,\n    dec,\n    equals,\n    flip,\n    gt,\n    head,\n    ifElse,\n    inc,\n    juxt,\n    length,\n    map,\n    merge,\n    objOf,\n    of,\n    pipe,\n    prop,\n    reject,\n    when\n} from \"ramda\";\nimport { ACTION_TYPE, BUTTON_TYPE } from \"../constant\";\nimport { def } from \"../types/types\";\nimport { isNextButton } from \"./actionUtil\";\nimport { logTap, wrapWithObject } from \"./fnUtil\";\nimport { getFixedHeightSmallUrl, getOriginalUrl, getSearchKeyword } from \"./requestUtil\";\n\nexport const createPrevAction = def(\n    \"createPrevAction :: Number -> Object\",\n    assoc(\"value\", __, {\n        name: BUTTON_TYPE.PREV,\n        text: \"이전 이미지\",\n        type: ACTION_TYPE.BUTTON\n    })\n);\n\nexport const createSendAction = def(\n    \"createSendAction :: Undefined -> Object\",\n    always({\n        name: BUTTON_TYPE.SEND,\n        text: \"대화방으로 보내기\",\n        type: ACTION_TYPE.BUTTON,\n        value: BUTTON_TYPE.SEND\n    })\n);\n\nexport const createSendActionWithValue = def(\n    \"createSendActionWithValue :: String -> Object\",\n    assoc(\"value\", __, {\n        name: BUTTON_TYPE.SEND,\n        text: \"대화방으로 보내기\",\n        type: ACTION_TYPE.BUTTON\n    })\n);\n\nexport const createNextAction = def(\n    \"createNextAction :: Number -> Object\",\n    assoc(\"value\", __, {\n        name: BUTTON_TYPE.NEXT,\n        text: \"다음 이미지\",\n        type: ACTION_TYPE.BUTTON\n    })\n);\n\nexport const createNextActions = def(\n    \"createNextActions :: Object -> Object\",\n    pipe(\n        prop(\"actionValue\"),\n        parseInt,\n        juxt([\n            pipe(\n                dec,\n                createPrevAction\n            ),\n            pipe(\n                always(undefined),\n                createSendAction\n            ),\n            pipe(\n                inc,\n                createNextAction\n            )\n        ]),\n        objOf(\"actions\")\n    )\n);\n\nexport const createPrevActions = def(\n    \"createPrevActions :: Object -> Object\",\n    pipe(\n        prop(\"actionValue\"),\n        parseInt,\n        juxt([\n            when(\n                gt(__, 0),\n                pipe(\n                    dec,\n                    createPrevAction\n                )\n            ),\n            pipe(\n                always(undefined),\n                createSendAction\n            ),\n            pipe(\n                inc,\n                createNextAction\n            )\n        ]),\n        reject(isEmpty),\n        wrapWithObject(\"actions\")\n    )\n);\n\nexport const createActions = def(\n    \"createActions :: Object -> Object\",\n    ifElse(isNextButton, createNextActions, createPrevActions)\n);\n\nexport const createInChannelResponse = def(\n    \"createInChannelResponse :: Object -> InChannelResponse\",\n    merge(__, { responseType: \"inChannel\" })\n);\n\nexport const createReplaceResponse = def(\n    \"createReplaceResponse :: Object -> ReplaceResponse\",\n    merge(__, { deleteOriginal: true })\n);\n\nexport const mergeActionAndImageAttachment = def(\n    \"mergeActionAndImageAttachment :: Object -> Object -> Object\",\n    (actionsAttachment, imageAttachment) => {\n        return {\n            attachments: [imageAttachment, actionsAttachment]\n        };\n    }\n);\n\nexport const mergeActionAndImagesAttachments = def(\n    \"mergeActionAndImagesAttachments :: Object -> [Object] -> Object\",\n    (actionsAttachment, imagesAttachments) => {\n        return {\n            attachments: [...imagesAttachments, actionsAttachment]\n        };\n    }\n);\n\n// prettier-ignore\nexport const createOriginImageAttachment = def(\n    \"createOriginImageAttachment :: Object -> Object\",\n    pipe(logTap('start'), getOriginalUrl, logTap('getOriginUrl'), objOf(\"imageUrl\"), logTap('test'))\n);\n\n// prettier-ignore\nexport const createMultiImageAttachments = def(\n    \"createMultiImageAttachments :: [Object] -> [Object]\",\n    map(pipe(\n        getFixedHeightSmallUrl,\n        converge(merge, [objOf(\"thumbUrl\"), pipe(createSendActionWithValue, of, objOf(\"actions\"))])\n        )\n    )\n);\n\n// prettier-ignore\nexport const createOriginImagesAttachment = def(\n    'createOriginImagesAttachment :: [Object] -> Object',\n    ifElse(\n        pipe(length, equals(1)),\n        pipe(head, createOriginImageAttachment),\n        createMultiImageAttachments\n    )\n);\n\nexport const createKeywordText = def(\n    \"createKeywordText :: Object -> Object\",\n    pipe(\n        getSearchKeyword,\n        logTap(\"text\"),\n        concat(\"'\"),\n        flip(concat)(\"'에 대한 검색 결과\"),\n        objOf(\"text\")\n    )\n);\n"]}